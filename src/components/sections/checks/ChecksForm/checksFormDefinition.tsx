import {
  FlattenKeys,
  IFormDefinition,
} from "@/components/shared/RHFFormBuilder/types";
import { ChecksFormPayload } from "./ChecksFormPayload";

export const getChecksFormDefinition = ({
  addEvaluationBtn,
}: {
  addEvaluationBtn: React.ReactNode;
}): IFormDefinition<FlattenKeys<ChecksFormPayload>> => {
  const baseDefinition = [
    {
      type: "typography",
      label: "Request",
      id: "request",
      className: "col-span-12 mt-4",
      inputProps: {
        className: "text-md font-medium text-white",
      },
      visible: true,
    },
    {
      type: "textfield",
      icon: "icon-park-outline:edit-name",
      requiredFieldSymbol: true,
      name: "request_id",
      id: "request_id",
      label: "Request ID",
      labelId: "request_id",
      visible: true,
    },
    {
      type: "typography",
      label: "Subject",
      id: "subject",
      className: "col-span-12 mt-4",
      inputProps: {
        className: "text-md font-medium text-white",
      },
      visible: true,
    },
    {
      type: "textfield",
      icon: "icon-park-outline:edit-name",
      requiredFieldSymbol: true,
      name: "subject.type",
      id: "subject.type",
      label: "Type",
      labelId: "subject.type",
      visible: true,
    },
    {
      type: "textfield",
      icon: "icon-park-outline:edit-name",
      requiredFieldSymbol: true,
      name: "subject.id",
      id: "subject.id",
      label: "ID",
      labelId: "subject.id",
      visible: true,
    },
    {
      type: "textfield",
      icon: "icon-park-outline:edit-name",
      requiredFieldSymbol: true,
      name: "subject.source",
      id: "subject.source",
      label: "Source",
      labelId: "subject.source",
      visible: true,
    },
    {
      type: "code",
      name: "subject.properties",
      id: "subject.properties",
      requiredFieldSymbol: true,
      label: "Properties",
      labelId: "subject.properties",
      height: "200px",
      language: "json",
      visible: true,
      className: "col-span-12",
    },
    {
      type: "typography",
      label: "Context",
      id: "context",
      className: "col-span-12 mt-4",
      inputProps: {
        className: "text-md font-medium text-white",
      },
      visible: true,
    },
    {
      type: "textfield",
      icon: "icon-park-outline:edit-name",
      requiredFieldSymbol: true,
      name: "context.time",
      id: "context.time",
      label: "Time",
      labelId: "context.time",
      visible: true,
    },
    {
      type: "checkbox",
      requiredFieldSymbol: true,
      name: "context.isSubscriptionActive",
      id: "context.isSubscriptionActive",
      label: "Is subscription active",
      labelId: "context.isSubscriptionActive",
      visible: true,
      className:
        "col-span-12 sm:col-span-6 flex items-end pb-2 sm:pl-10 select-none",
    },
    {
      type: "typography",
      label: "Evaluations",
      id: "evaluations",
      className: "col-span-12 flex gap-12 mt-4",
      inputProps: {
        className: "text-md font-medium text-white",
      },
      visible: true,
      additionalContent: addEvaluationBtn,
    },
    {
      type: "textfield",
      icon: "icon-park-outline:edit-name",
      requiredFieldSymbol: true,
      name: "evaluations[0].request_id",
      id: "evaluations[0].request_id",
      label: "Request ID",
      labelId: "evaluations[0].request_id",
      visible: true,
    },
    {
      type: "typography",
      label: "Resource",
      id: "resource",
      className: "col-span-12 mt-4",
      inputProps: {
        className: "text-md font-medium text-white",
      },
      visible: true,
    },
    {
      type: "textfield",
      icon: "icon-park-outline:edit-name",
      requiredFieldSymbol: true,
      name: "evaluations[0].resource.type",
      id: "evaluations[0].resource.type",
      label: "Type",
      labelId: "evaluations[0].resource.type",
      visible: true,
    },
    {
      type: "textfield",
      icon: "icon-park-outline:edit-name",
      requiredFieldSymbol: true,
      name: "evaluations[0].resource.id",
      id: "evaluations[0].resource.id",
      label: "ID",
      labelId: "evaluations[0].resource.id",
      visible: true,
    },
    {
      type: "code",
      name: "evaluations[0].resource.properties",
      id: "evaluations[0].resource.properties",
      requiredFieldSymbol: true,
      label: "Properties",
      labelId: "evaluations[0].resource.properties",
      height: "200px",
      language: "json",
      visible: true,
      className: "col-span-12",
    },
    {
      type: "typography",
      label: "Action",
      id: "action",
      className: "col-span-12 mt-4",
      inputProps: {
        className: "text-md font-medium text-white",
      },
      visible: true,
    },
    {
      type: "textfield",
      icon: "icon-park-outline:edit-name",
      requiredFieldSymbol: true,
      name: "evaluations[0].action.name",
      id: "evaluations[0].action.name",
      label: "Name",
      labelId: "evaluations[0].action.name",
      visible: true,
    },
    {
      type: "code",
      name: "evaluations[0].action.properties",
      id: "evaluations[0].action.properties",
      requiredFieldSymbol: true,
      label: "Properties",
      labelId: "evaluations[0].action.properties",
      height: "200px",
      language: "json",
      visible: true,
    },
  ].filter(Boolean) as IFormDefinition<FlattenKeys<ChecksFormPayload>>;

  return baseDefinition;
};
